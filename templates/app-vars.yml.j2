---
app_name:           {{ app_name }}
deploy_user:        deploy

deploy_group:       "{{'{{ deploy_user }}'}}"
deploy_user_path:   "/home/{{'{{ deploy_user }}'}}"

vault_rails_master_key: "{{'{{ master_key }}'}}"
vault_postgresql_db_password: "{{'{{ db_password }}'}}"
# App Git repo
app_git_repo:       "git@github.com:cerico/{{'{{ app_name }}'}}.git"
app_git_branch:     "main"

# Url
url: {{ url }}
deploy_user_public_key_local_path: {{ deploy_user_public_key_local_path }}

# Rails app
app_root_path:      "/var/www/html/{{'{{ url }}' }}"
app_current_path:   "{{'{{ app_root_path }}' }}/current"
app_releases_path:  "{{'{{ app_root_path }}' }}/releases"
app_shared_path:    "{{'{{ app_root_path }}' }}/shared"
app_pids_path:      "{{'{{ app_shared_path }}' }}/tmp/pids"
app_logs_path:      "{{'{{ app_shared_path }}' }}/logs"
app_sockets_path:   "{{'{{ app_shared_path }}' }}/sockets"
rails_db_pool:      20
rails_environment:  production

# Puma
puma_service_file:  "puma.service.j2"
puma_config_file:   "{{'{{ app_current_path }}' }}/config/puma.rb"
puma_socket:        "{{'{{ app_sockets_path}}' }}/puma.sock"
puma_web_concurrency: 2

# Sidekiq
sidekiq_service_file:  "sidekiq.service.j2"

# Ansistrano
ansistrano_deploy_via: git
ansistrano_git_repo: "{{'{{ app_git_repo }}'}}"
ansistrano_git_branch: "{{'{{ app_git_branch }}'}}"
ansistrano_git_identity_key_path: "{{'{{ deploy_user_public_key_local_path }}'}}"
ansistrano_deploy_from: "{{'{{ playbook_dir }}' }}/../"
ansistrano_deploy_to: "{{'{{ app_root_path }}'}}"
ansistrano_keep_releases: 3
ansistrano_after_cleanup_tasks_file: "{{'{{ playbook_dir }}' }}/deploy_tasks/after_cleanup.yml"
ansistrano_ensure_shared_paths_exist: yes
ansistrano_ensure_basedirs_shared_files_exist: yes

ansistrano_shared_paths:
  - log           # log -> ../../shared/log
  - tmp           # tmp -> ../../shared/tmp
  - vendor        # vendor -> ../../shared/vendor
  - public/assets # For rails asset pipeline
  - public/packs  # For webpacker
  - node_modules  # For webpacker node_modules -> ../../shared/node_modules

shared_files_to_copy:
  - { src: database.yml.j2, dest: config/database.yml }

# Common
required_packages:
  - zlib1g-dev 
  - build-essential 
  - libssl-dev 
  - libreadline-dev 
  - libyaml-dev 
  - libxml2-dev 
  - libxslt1-dev 
  - libcurl4-openssl-dev
  - libffi-dev 
  - dirmngr 
  - gnupg
  - autoconf
  - bison
  - libreadline6-dev
  - libncurses5-dev
  - libgdbm6
  - libgdbm-dev
  - libpq-dev # postgresql client
  - libjemalloc-dev # jemalloc
  - acl
  - libsqlite3-dev

# Ruby
ruby_version: {{ ruby_version }}
rbenv_ruby_configure_opts: "RUBY_CONFIGURE_OPTS=--with-jemalloc"
rbenv_root_path: "{{'{{ deploy_user_path }}'}}/.rbenv"
rbenv_shell_rc_path: "{{'{{ deploy_user_path }}'}}/.bashrc"
rubies_path: "{{'{{ rbenv_root_path }}'}}/versions"
ruby_path: "{{'{{ rubies_path }}/{{ ruby_version }}'}}"
rbenv_bin: "{{'{{ rbenv_root_path }}'}}/bin/rbenv"
rbenv_bundle: "{{'{{ rbenv_root_path }}'}}/shims/bundle"


# Nodejs
nodejs_version: "15.x"

# Postgresql
postgres_name: "{{'{{ app_name | replace(\'-\',\'_\') }}'}}"
postgresql_version: {{ postgresql_version }}
postgresql_db_user: "{{'{{ postgres_name }}'}}"
postgresql_db_password: "{{'{{ vault_postgresql_db_password }}'}}" # from vault
postgresql_db_name: "{{'{{ postgres_name }}'}}_production"
postgresql_listen:
  - "localhost"
  - "{{'{{ ansible_default_ipv4.address }}'}}" # only if db is on a separate server

#certbot
email: {{ email }}

#nginx
# nginx_https_enabled: true
# nginx_conf_template: "nginx.conf.j2"

logrotate_conf:
  - path: "ansible"
    conf: |
      "{{'{{ app_current_path }}' }}/log/*.log" {
        weekly
        size 100M
        missingok
        rotate 12
        compress
        delaycompress
        notifempty
        copytruncate
      }

# UFW 
ufw_rules:
  - { rule: "allow", proto: "tcp", from: "any", port: "80" }
  - { rule: "allow", proto: "tcp", from: "any", port: "443" }
  - { rule: "allow", proto: "tcp", from: "any", port: "22" }
